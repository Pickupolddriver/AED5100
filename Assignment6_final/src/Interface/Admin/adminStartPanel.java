/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Admin;

import Business.Admin;
import Business.Business;
import Business.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lijianxi
 */
public class adminStartPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminPanel
     */
    private JPanel processPanel;
    private Admin admin;
    private Business business;

    public adminStartPanel(JPanel processPanel, Admin admin, Business business) {
        initComponents();
        this.processPanel = processPanel;
        this.admin = admin;
        this.business = business;
        refreshTbl();
        txtBalance.setText(String.valueOf(admin.getBank().getBalance()));
    }

    public void refreshTbl() {
        int ordersRowCount = tblAllOrders.getRowCount();
        int requestRowCount = tblPendingRequests.getRowCount();
        DefaultTableModel orderModel = (DefaultTableModel) tblAllOrders.getModel();
        for (int i = ordersRowCount - 1; i >= 0; i--) {
            orderModel.removeRow(i);
        }
        DefaultTableModel requestModel = (DefaultTableModel) tblPendingRequests.getModel();
        for (int i = requestRowCount - 1; i >= 0; i--) {
            requestModel.removeRow(i);
        }
        for (WorkRequest wr : business.getWq().getWorkRequestList()) {
            if (wr.getStatus() == "Pending") {
                Object row[] = new Object[5];
                row[0] = wr;
                row[1] = wr.getOrder().getOrderDate().toString();
                row[2] = wr.getOrder().getOrderStatus();
                row[3] = wr.getStatus();
                row[4] = wr.getRequestDate();
                //row[5] = wr.getResolveDate();
                requestModel.addRow(row);
            } else {
                Object row[] = new Object[10];
                row[0] = wr;
                row[1] = wr.getOrder().getOrderDate().toString();
                row[2] = wr.getOrder().getWine().getWineName();
                row[3] = wr.getOrder().getBuyer();
                row[4] = wr.getOrder().getSeller();
                row[5] = wr.getOrder().getQty();
                row[6] = wr.getOrder().getTotal();
                row[7] = wr.getOrder().getOrderStatus();
                row[8] = wr.getStatus();
               // row[9] = wr.getRequestDate();
                row[9] = wr.getResolveDate();
                
                orderModel.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        tblPendingRequests = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAllOrders = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnPaySeller = new javax.swing.JButton();
        btnPayBuyer = new javax.swing.JButton();
        btnAccountMgt = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtBalance = new javax.swing.JTextField();
        btnAppeal = new javax.swing.JButton();
        btnChargeBuyer = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblPendingRequests.setFont(new java.awt.Font("Viner Hand ITC", 0, 14)); // NOI18N
        tblPendingRequests.setForeground(new java.awt.Color(255, 102, 102));
        tblPendingRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Number", "Order Date", "Order Status", "Request status", "Request Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblPendingRequests);

        jLabel1.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 102));
        jLabel1.setText("All Transactions of virtual mall:");

        tblAllOrders.setFont(new java.awt.Font("Viner Hand ITC", 0, 14)); // NOI18N
        tblAllOrders.setForeground(new java.awt.Color(255, 102, 102));
        tblAllOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Number", "Order Date", "Wine Name", "Buyer", "Seller Name", "Quantity", "Subtotal", "Order Status", "Request status", "Resolve Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblAllOrders);

        jLabel2.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 102));
        jLabel2.setText("Pending Work Requests:");

        btnPaySeller.setBackground(new java.awt.Color(255, 255, 255));
        btnPaySeller.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        btnPaySeller.setForeground(new java.awt.Color(255, 102, 102));
        btnPaySeller.setText("Transfer money to seller");
        btnPaySeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaySellerActionPerformed(evt);
            }
        });

        btnPayBuyer.setBackground(new java.awt.Color(255, 255, 255));
        btnPayBuyer.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        btnPayBuyer.setForeground(new java.awt.Color(255, 102, 102));
        btnPayBuyer.setText("Issue Refund to Buyer");
        btnPayBuyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayBuyerActionPerformed(evt);
            }
        });

        btnAccountMgt.setBackground(new java.awt.Color(255, 255, 255));
        btnAccountMgt.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        btnAccountMgt.setForeground(new java.awt.Color(255, 102, 102));
        btnAccountMgt.setText("Manage Accounts");
        btnAccountMgt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccountMgtActionPerformed(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(255, 255, 255));
        btnLogout.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(255, 102, 102));
        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Rage Italic", 3, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 102));
        jLabel3.setText("Administration");

        jLabel29.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 102, 102));
        jLabel29.setText("Balance:");

        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });

        btnAppeal.setBackground(new java.awt.Color(255, 255, 255));
        btnAppeal.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        btnAppeal.setForeground(new java.awt.Color(255, 102, 102));
        btnAppeal.setText("Appeal");
        btnAppeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppealActionPerformed(evt);
            }
        });

        btnChargeBuyer.setBackground(new java.awt.Color(255, 255, 255));
        btnChargeBuyer.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        btnChargeBuyer.setForeground(new java.awt.Color(255, 102, 102));
        btnChargeBuyer.setText("Charge Buyer");
        btnChargeBuyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChargeBuyerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLogout))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnChargeBuyer, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnPaySeller)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnPayBuyer)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnAccountMgt))
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(91, 91, 91)
                                    .addComponent(jLabel29)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAppeal))
                        .addGap(0, 85, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnLogout)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29)
                        .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPaySeller)
                    .addComponent(btnPayBuyer)
                    .addComponent(btnAccountMgt)
                    .addComponent(btnChargeBuyer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAppeal)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPaySellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaySellerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPendingRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "pls select a row");
            return;
        }
        WorkRequest wr = (WorkRequest) tblPendingRequests.getValueAt(selectedRow, 0);
        if (wr.getOrder().getOrderStatus() == "Delivered") {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String str = sdf.format(new Date());
             wr.setResolveDate(str);
            double newSellerBalance = (wr.getOrder().getSeller().getBank().getBalance() + (wr.getOrder().getTotal() * 0.99));
            double newAdminBalance = (admin.getBank().getBalance() - (wr.getOrder().getTotal() * 0.99));
            wr.setStatus("Paid to seller");
            wr.getOrder().getSeller().getBank().setBalance(newSellerBalance);
            admin.getBank().setBalance(newAdminBalance);
            txtBalance.setText(String.valueOf(admin.getBank().getBalance()));
            refreshTbl();
        }else{
            JOptionPane.showMessageDialog(null, "Please select an order that matches Delivered");
        }


    }//GEN-LAST:event_btnPaySellerActionPerformed

    private void btnPayBuyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayBuyerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPendingRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "pls select a row");
            return;
        }
        WorkRequest wr = (WorkRequest) tblPendingRequests.getValueAt(selectedRow, 0);
        if (wr.getOrder().getOrderStatus() == "Returned") {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String str = sdf.format(new Date());
             wr.setResolveDate(str);
            double newSellerBalance = (wr.getOrder().getSeller().getBank().getBalance() - wr.getOrder().getTotal());
            //double newAdminBalance = (admin.getBank().getBalance() + (wr.getOrder().getTotal() * 0.99));
            double newBuyerBalance = (wr.getOrder().getBuyer().getBank().getBalance() + (wr.getOrder().getTotal()));
            wr.setStatus("Refunded to buyer");
            wr.getOrder().getSeller().getBank().setBalance(newSellerBalance);
            //admin.getBank().setBalance(newAdminBalance);
            wr.getOrder().getBuyer().getBank().setBalance(newBuyerBalance);
            txtBalance.setText(String.valueOf(admin.getBank().getBalance()));
            refreshTbl();
        }else {
            JOptionPane.showMessageDialog(null, "Please select an order that matches Refunded");
        }
    }//GEN-LAST:event_btnPayBuyerActionPerformed

    private void btnAccountMgtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccountMgtActionPerformed
        // TODO add your handling code here:
        accountMgtPanel amp = new accountMgtPanel(processPanel, business);
        processPanel.add("accountMgtPanel", amp);
        CardLayout card = (CardLayout) processPanel.getLayout();
        card.next(processPanel);

    }//GEN-LAST:event_btnAccountMgtActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        processPanel.remove(this);
        Component[] componentArray = processPanel.getComponents();
        Component comp = componentArray[componentArray.length - 1];
        JPanel firstPage = (JPanel) comp;
        CardLayout card = (CardLayout) processPanel.getLayout();
        card.previous(processPanel);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceActionPerformed

    private void btnAppealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppealActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblPendingRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "pls select a row");
            return;
        }
        WorkRequest wr = (WorkRequest) tblPendingRequests.getValueAt(selectedRow, 0);
        if (wr.getOrder().getOrderStatus() == "Appealed") {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String str = sdf.format(new Date());
             wr.setResolveDate(str);
            wr.setStatus("Appeal Processing");
            refreshTbl();
        } else {
            JOptionPane.showMessageDialog(null, "PLEASE select any order status matches appealed");
        }
    }//GEN-LAST:event_btnAppealActionPerformed

    private void btnChargeBuyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChargeBuyerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPendingRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "pls select a row");
            return;
        }
        WorkRequest wr = (WorkRequest) tblPendingRequests.getValueAt(selectedRow, 0);
        if (wr.getOrder().getOrderStatus() == "Order Placed") {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String str = sdf.format(new Date());
             wr.setResolveDate(str);
            double newAdminBalance = (admin.getBank().getBalance() + wr.getOrder().getTotal());
            double newBuyerBalance = (wr.getOrder().getBuyer().getBank().getBalance() - (wr.getOrder().getTotal()));
            wr.setStatus("Buyer Charged");
            wr.getOrder().setOrderStatus("Order Paid");
            admin.getBank().setBalance(newAdminBalance);
            wr.getOrder().getBuyer().getBank().setBalance(newBuyerBalance);
            txtBalance.setText(String.valueOf(admin.getBank().getBalance()));
            refreshTbl();
        } else {
            JOptionPane.showMessageDialog(null, "PLEASE select any order status matches Order palced");
        }
    }//GEN-LAST:event_btnChargeBuyerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccountMgt;
    private javax.swing.JButton btnAppeal;
    private javax.swing.JButton btnChargeBuyer;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnPayBuyer;
    private javax.swing.JButton btnPaySeller;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tblAllOrders;
    private javax.swing.JTable tblPendingRequests;
    private javax.swing.JTextField txtBalance;
    // End of variables declaration//GEN-END:variables
}
